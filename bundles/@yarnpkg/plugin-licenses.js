/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-licenses",
factory: function (require) {
var plugin=(()=>{var oe=Object.create,M=Object.defineProperty;var re=Object.getOwnPropertyDescriptor;var ae=Object.getOwnPropertyNames,_=Object.getOwnPropertySymbols,ce=Object.getPrototypeOf,z=Object.prototype.hasOwnProperty,le=Object.prototype.propertyIsEnumerable;var K=(e,t,n)=>t in e?M(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,F=(e,t)=>{for(var n in t||(t={}))z.call(t,n)&&K(e,n,t[n]);if(_)for(var n of _(t))le.call(t,n)&&K(e,n,t[n]);return e};var de=e=>M(e,"__esModule",{value:!0});var d=e=>{if(typeof require!="undefined")return require(e);throw new Error('Dynamic require of "'+e+'" is not supported')};var E=(e,t)=>{for(var n in t)M(e,n,{get:t[n],enumerable:!0})},pe=(e,t,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of ae(t))!z.call(e,i)&&i!=="default"&&M(e,i,{get:()=>t[i],enumerable:!(n=re(t,i))||n.enumerable});return e},p=e=>pe(de(M(e!=null?oe(ce(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e);var Te={};E(Te,{default:()=>ve});var ee=p(d("@yarnpkg/cli")),x=p(d("@yarnpkg/core")),w=p(d("clipanion"));var r=p(d("@yarnpkg/core")),u=p(d("@yarnpkg/fslib"));var $={};E($,{fs:()=>me,getPackagePath:()=>fe});var q=p(d("@yarnpkg/plugin-pnp")),S=p(d("@yarnpkg/core")),j=p(d("@yarnpkg/fslib")),J=p(d("@yarnpkg/libzip")),fe=async(e,t)=>{ue(e);let n=S.structUtils.convertPackageToLocator(t),i={name:S.structUtils.stringifyIdent(n),reference:n.reference},s=R.getPackageInformation(i);if(!s)return null;let{packageLocation:a}=s;return a},R,ue=e=>{R||(R=module.require((0,q.getPnpPath)(e).cjs))},me=new j.VirtualFS({baseFs:new j.ZipOpenFS({libzip:(0,J.getLibzipSync)(),readOnlyArchives:!0})});var H={};E(H,{fs:()=>Pe,getPackagePath:()=>ge});var A=p(d("@yarnpkg/core")),Y=p(d("@yarnpkg/parsers")),y=p(d("@yarnpkg/fslib")),ge=async(e,t)=>{await he(e);let n=A.structUtils.convertPackageToLocator(t),i=W[A.structUtils.stringifyLocator(n)];if(!i)return null;let s=i.locations[0];return s?y.ppath.join(e.cwd,s):e.cwd},W,he=async e=>{if(!W){let t=y.ppath.join(e.configuration.projectCwd,y.Filename.nodeModules,".yarn-state.yml");W=(0,Y.parseSyml)(await y.xfs.readFilePromise(t,"utf8"))}},Pe=y.xfs;var B=e=>{switch(e){case"pnp":return $;case"node-modules":return H;default:throw new Error("Unsupported linker")}};var Re=u.npath.basename(__dirname)==="@yarnpkg"?u.ppath.join(u.npath.toPortablePath(__dirname),"../.."):u.ppath.join(u.npath.toPortablePath(__dirname),".."),Z=async(e,t,n,i,s)=>{let a={},l={children:a},o=await G(e,n,i),c=B(e.configuration.get("nodeLinker"));for(let[f,g]of o.entries()){let h=await c.getPackagePath(e,g);if(h===null)continue;let v=JSON.parse(await c.fs.readFilePromise(u.ppath.join(h,u.Filename.manifest),"utf8")),{license:m,url:N,vendorName:T,vendorUrl:I}=ye(v);a[m]||(a[m]={value:r.formatUtils.tuple(r.formatUtils.Type.NO_HINT,m),children:{}});let L=r.structUtils.convertPackageToLocator(g),P=r.formatUtils.tuple(r.formatUtils.Type.DEPENDENT,{locator:L,descriptor:f}),k=s?{}:F(F(F({},N?{url:{value:r.formatUtils.tuple(r.formatUtils.Type.NO_HINT,V("URL",N,t))}}:{}),T?{vendorName:{value:r.formatUtils.tuple(r.formatUtils.Type.NO_HINT,V("VendorName",T,t))}}:{}),I?{vendorUrl:{value:r.formatUtils.tuple(r.formatUtils.Type.NO_HINT,V("VendorUrl",I,t))}}:{}),ne={value:P,children:k},ie=r.structUtils.stringifyLocator(L),se=a[m].children;se[ie]=ne}return l},G=async(e,t,n)=>{let i=new Map,s;if(t){if(n){for(let c of e.workspaces)c.manifest.devDependencies.clear();let o=await r.Cache.find(e.configuration);await e.resolveEverything({report:new r.ThrowReport,cache:o})}s=e.storedDescriptors.values()}else s=e.workspaces.flatMap(o=>{let c=[o.anchoredDescriptor];for(let[f,g]of o.dependencies.entries())n&&o.manifest.devDependencies.has(f)||c.push(g);return c});let a=r.miscUtils.sortMap(s,[o=>r.structUtils.stringifyIdent(o),o=>r.structUtils.isVirtualDescriptor(o)?"0":"1",o=>o.range]),l=new Set;for(let o of a.values()){let c=e.storedResolutions.get(o.descriptorHash);if(!c)continue;let f=e.storedPackages.get(c);if(!f)continue;let{descriptorHash:g}=r.structUtils.isVirtualDescriptor(o)?r.structUtils.devirtualizeDescriptor(o):o;l.has(g)||(l.add(g),i.set(o,f))}return i};function ke(e){let t={},n=e.match(/^([^(<]+)/);if(n){let a=n[0].trim();a&&(t.name=a)}let i=e.match(/<([^>]+)>/);i&&(t.email=i[1]);let s=e.match(/\(([^)]+)\)/);return s&&(t.url=s[1]),t}var ye=e=>{let{license:t,licenses:n,repository:i,homepage:s,author:a}=e,l=typeof a=="string"?ke(a):a;return{license:(()=>{if(t)return C(t);if(n){if(!Array.isArray(n))return C(n);if(n.length===1)return C(n[0]);if(n.length>1)return`(${n.map(C).join(" OR ")})`}return Q})(),url:(i==null?void 0:i.url)||s,vendorName:l==null?void 0:l.name,vendorUrl:s||(l==null?void 0:l.url)}},Q="UNKNOWN",C=e=>(typeof e!="string"?e.type:e)||Q,V=(e,t,n)=>n?t:`${e}: ${t}`,X=async(e,t,n)=>{let i=await G(e,t,n),s=B(e.configuration.get("nodeLinker")),a=new Map;for(let o of i.values()){let c=await s.getPackagePath(e,o);if(c===null)continue;let f=JSON.parse(await s.fs.readFilePromise(u.ppath.join(c,u.Filename.manifest),"utf8")),h=(await s.fs.readdirPromise(c,{withFileTypes:!0})).filter(P=>P.isFile()).map(({name:P})=>P),v=h.find(P=>{let k=P.toLowerCase();return k==="license"||k.startsWith("license.")||k==="unlicense"||k.startsWith("unlicense.")});if(!v)continue;let m=await s.fs.readFilePromise(u.ppath.join(c,v),"utf8"),N=h.find(P=>{let k=P.toLowerCase();return k==="notice"||k.startsWith("notice.")}),T;N&&(T=await s.fs.readFilePromise(u.ppath.join(c,N),"utf8"));let I=T?`${m}

NOTICE

${T}`:m,L=a.get(I);L?L.set(f.name,f):a.set(I,new Map([[f.name,f]]))}let l=`THE FOLLOWING SETS FORTH ATTRIBUTION NOTICES FOR THIRD PARTY SOFTWARE THAT MAY BE CONTAINED IN PORTIONS OF THE ${String(e.topLevelWorkspace.manifest.raw.name).toUpperCase().replace(/-/g," ")} PRODUCT.

`;for(let[o,c]of a.entries()){l+=`-----

`;let f=[],g=[];for(let{name:v,repository:m}of c.values())f.push(v),(m==null?void 0:m.url)&&g.push(c.size===1?m.url:`${m.url} (${v})`);let h=[];h.push(`The following software may be included in this product: ${f.join(", ")}.`),g.length>0&&h.push(`A copy of the source code may be downloaded from ${g.join(", ")}.`),h.push("This software contains the following license and notice below:"),l+=`${h.join(" ")}

`,l+=`${o.trim()}

`}return l};var U=class extends w.Command{constructor(){super(...arguments);this.recursive=w.Option.Boolean("-R,--recursive",!1,{description:"Include transitive dependencies (dependencies of direct dependencies)"});this.production=w.Option.Boolean("--production",!1,{description:"Exclude development dependencies"});this.json=w.Option.Boolean("--json",!1,{description:"Format output as JSON"});this.excludeMetadata=w.Option.Boolean("--exclude-metadata",!1,{description:"Exclude dependency metadata from output"})}async execute(){let t=await x.Configuration.find(this.context.cwd,this.context.plugins),{project:n,workspace:i}=await x.Project.find(t,this.context.cwd);if(!i)throw new ee.WorkspaceRequiredError(n.cwd,this.context.cwd);await n.restoreInstallState();let s=await Z(n,this.json,this.recursive,this.production,this.excludeMetadata);x.treeUtils.emitTree(s,{configuration:t,stdout:this.context.stdout,json:this.json,separators:1})}};U.paths=[["licenses","list"]],U.usage=w.Command.Usage({description:"display the licenses for all packages in the project",details:`
      This command prints the license information for packages in the project. By default, only direct dependencies are listed.

      If \`-R,--recursive\` is set, the listing will include transitive dependencies (dependencies of direct dependencies).

      If \`--production\` is set, the listing will exclude development dependencies.
    `,examples:[["List all licenses of direct dependencies","$0 licenses list"],["List all licenses of direct and transitive dependencies","$0 licenses list --recursive"],["List all licenses of production dependencies only","$0 licenses list --production"]]});var te=p(d("@yarnpkg/cli")),D=p(d("@yarnpkg/core")),b=p(d("clipanion"));var O=class extends b.Command{constructor(){super(...arguments);this.recursive=b.Option.Boolean("-R,--recursive",!1,{description:"Include transitive dependencies (dependencies of direct dependencies)"});this.production=b.Option.Boolean("--production",!1,{description:"Exclude development dependencies"})}async execute(){let t=await D.Configuration.find(this.context.cwd,this.context.plugins),{project:n,workspace:i}=await D.Project.find(t,this.context.cwd);if(!i)throw new te.WorkspaceRequiredError(n.cwd,this.context.cwd);await n.restoreInstallState();let s=await X(n,this.recursive,this.production);this.context.stdout.write(s)}};O.paths=[["licenses","generate-disclaimer"]],O.usage=b.Command.Usage({description:"display the license disclaimer including all packages in the project",details:`
      This command prints the license disclaimer for packages in the project. By default, only direct dependencies are listed.

      If \`-R,--recursive\` is set, the disclaimer will include transitive dependencies (dependencies of direct dependencies).

      If \`--production\` is set, the disclaimer will exclude development dependencies.
    `,examples:[["Include licenses of direct dependencies","$0 licenses generate-disclaimer"],["Include licenses of direct and transitive dependencies","$0 licenses generate-disclaimer --recursive"],["Include licenses of production dependencies only","$0 licenses list --production"]]});var we={commands:[U,O]},ve=we;return Te;})();
return plugin;
}
};
